{% extends 'app/base.html.twig' %}

{% block title %}{{ article.title}} - Geoffrey Huck{% endblock %}
{% block canonical %}<link rel="canonical" href="{{ site_url }}{{ path('article_show', { url: article.url }) }}" />{% endblock %}

{% macro displayComment(comment, nested = false) %}
    <div class="comment {% if comment.status == constant('App\\Entity\\Comment::STATUS_MANUAL') %}comment-spam{% endif %}" id="{{ comment.anchor }}" {% if nested %}style="margin-left: 5px;"{% endif %}>
        <span class="author">{{ comment.author }}</span> on {{ comment.createdAt | date('d/m/Y H:i:s') }} :
        <br /><br />
        {{ comment.content | nl2br }}
        <br /><br />
        <a href="#comment" data-replyTo="{{ comment.author }} on {{ comment.createdAt | date('d/m/Y H:i:s') }}" class="reply-link">Reply</a>

        {% if comment.children | length %}
            <br /><br />
            {% for child in comment.children %}
                {{ _self.displayComment(child, true) }}
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}

{% block content %}
    <div class="container">
        <article>
            <h1>{{ article.title }}</h1>
            Published on {{ article.publishedDate | date('d/m/Y') }}

            <hr />

            {{ article.content | raw }}
        </article>
    </div>

    <hr />

    {% if comments | length %}
        <div class="container">
            {% for comment in comments %}
                {% if comment.parent is null %}
                    {{ _self.displayComment(comment) }}
                {% endif %}
            {% endfor %}
        </div>

        <hr />
    {% endif %}

    {% if formComment %}
        <div class="container" id="comment">
            <h2>Leave a comment</h2>

            <p>Your email will not appear on the website.</p>

            <form method="post" action="#comment" novalidate>
                {{ form_errors(formComment) }}

                <div id="reply-to-container" style="display: none;">
                    {{ form_row(formComment.replyTo) }}
                </div>
                {{ form_row(formComment.content) }}
                {{ form_row(formComment.author) }}
                {{ form_row(formComment.email) }}

                {{ form_rest(formComment) }}

                <button class="btn" type="submit">
                    Let's post it !
                </button>
            </form>
        </div>
    {% endif %}

    <hr />
    <div class="container">
        <div class="stay-in-touch">
            <p>Let's stay in touch ?</p>
        </div>
    </div>

    <hr />
{% endblock %}

{% block javascripts %}
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
          messageStyle: "none",
          tex2jax: {
            inlineMath: [["\\(", "\\)"]],
            displayMath: [["\\[", "\\]"]],
            ignoreClass: "nostem|nolatexmath"
          },
          asciimath2jax: {
            delimiters: [["\\$", "\\$"]],
            ignoreClass: "nostem|noasciimath"
          },
          TeX: { equationNumbers: { autoNumber: "none" } }
        });
        MathJax.Hub.Register.StartupHook("AsciiMath Jax Ready", function () {
          MathJax.InputJax.AsciiMath.postfilterHooks.Add(function (data, node) {
            if ((node = data.script.parentNode) && (node = node.parentNode) && node.classList.contains('stemblock')) {
              data.math.root.display = "block";
            }

            return data;
          });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_HTMLorMML"></script>
{% endblock %}
